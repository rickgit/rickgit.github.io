digraph g{
	//工匠与工艺，教育学，自律与学习，归纳，总结，修改
	软件开发者路线图->"2010 年 作者：Dave Hoover"
	软件开发者路线图->软件工艺宣言
	软件开发者路线图->绪论->"《 Software Craftsmanship》"

	绪论->{"Ron Jeffries","Martin Fowler"}
	绪论->软件技能->{学徒,熟练工,师傅}
	师傅->习惯
	绪论->学徒期->"《 Fifteen Craftsmen On Their Crafts》"
	学徒期->学徒过程是学习如何成为专业软件开发者的途径。
	绪论->学徒模式->尝试给那些走在职业进步的道路上按工艺模式来工作的人提供指导

	学徒模式->模式语言->"最初的模式语言是Christopher Alexander在《 A Pattern Language》"
	模式语言->"“ 四人帮” 写的《 Design Patterns》"
	模式语言->"Martin Fowler的《 Refactoring: Improving the Design of Existing Code》"
	绪论->模式来自哪里->"好的软件框架设计考虑的原则之一就是从能够运行的实际系统中提取框架元素"


	软件开发者路线图->空杯心态->初学者的思想

	空杯心态->{入门语言,白色腰带,释放激情,具体技能,暴露无知,正式无知,深水区域,以退为进}
	暴露无知->学习的能力
	正式无知->公开地学习是学徒开始向熟练工跃进的途径之一
	正式无知->仅仅暴露无知却不视之为需要解决的问题则会导致过度的谦卑和无能

}